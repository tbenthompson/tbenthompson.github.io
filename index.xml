<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homepage on T. Ben Thompson</title>
    <link>http://tbenthompson.com/</link>
    <description>Recent content in Homepage on T. Ben Thompson</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jan 2010 00:00:00 -0500</lastBuildDate>
    
	<atom:link href="http://tbenthompson.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Geometrically complex quasidynamic earthquake ruptures</title>
      <link>http://tbenthompson.com/project/quasidynamic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tbenthompson.com/project/quasidynamic/</guid>
      <description>Earthquake modelling normally involves a planar fault in an elastic half or full space. Over the past couple years, I have looked at what happens to static earthquake models when we add fault geometry, surface topography and Earth curvature. There are some large and interesting effects. I am now looking into the influence of these geometric effects on quasidynamic and dynamic earthquake rupture models. A lot of research has been directed towards to complex, nonlinear effects of rheology and friction laws in rupture modeling.</description>
    </item>
    
    <item>
      <title>The Earth isn’t flat: The large influence of topography on geodetic fault slip imaging.</title>
      <link>http://tbenthompson.com/project/topography/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tbenthompson.com/project/topography/</guid>
      <description>Images of earthquake slip typically rely on flat Earth physical models to link surface observations to fault activity at depth despite the extreme topographic relief (20%) in vicinity of recent great earthquakes (e.g., 2008 $M_w$=7.9 Wenchuan). Here we use a three-dimensional boundary element approach to characterize the effects of realistic topography on coseismic slip inversions and find that near the steepest topography, the flat Earth assumption may induce errors $&amp;gt;100%$ in imaged coseismic slip.</description>
    </item>
    
    <item>
      <title>Tectosaur: Powerful and efficient boundary element software</title>
      <link>http://tbenthompson.com/project/tectosaur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tbenthompson.com/project/tectosaur/</guid>
      <description>Our tectonic and earthquake cycle research is supported by development of elastic boundary element software. This has required investigations into the best approaches for a wide range of computational and mathematical tasks: singular integration of Green&amp;rsquo;s functions, approximation of farfield Green&amp;rsquo;s function interactions with the fast multipole method, flexible treatment of equality and inequality constraints, and a big dose of computational geometry. These are a just a few of the components of this effort.</description>
    </item>
    
    <item>
      <title>Taskloaf: Simplified distributed task parallelism</title>
      <link>http://tbenthompson.com/project/taskloaf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tbenthompson.com/project/taskloaf/</guid>
      <description>Taskloaf GitHub page
Task-based parallelism enables running complex parallel computations by describing them as a graph of tasks. Shared memory task-based parallelism has become an important tool as demonstrated by tools like Intel TBB, Cilk, and OpenMP v3. But, distributed memory task-based parallelism systems is still heavily researched to determine the most usable, efficient and scalable approach. Instead of waiting for the future holy grail of distributed task parallelism, I designed Taskloaf while visiting Oak Ridge National Lab in Fall 2015.</description>
    </item>
    
    <item>
      <title>cppimport: Import C&#43;&#43; files directly from Python!</title>
      <link>http://tbenthompson.com/project/cppimport/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tbenthompson.com/project/cppimport/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Crustal stress estimation in the Himalayan wedge</title>
      <link>http://tbenthompson.com/project/himalaya_stress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tbenthompson.com/project/himalaya_stress/</guid>
      <description>Quantitative estimates of crustal stress magnitude and orientation are hard to come by. On the other hand, geodesy is providing an increasingly accurate picture of global tectonic motions. Field and laboratory analyses contribute fault slip rates and exhumation rates. Seismology yields estimates of stress from moment tensor analyses. I am working to combine these data sources with geometrically accurate elastic boundary element models to estimate the crustal stress field and the driving forces behind those stresses &amp;ndash; for example, mantle tractions on the base of the crust.</description>
    </item>
    
    <item>
      <title>Longmen Shan fault geometry and slip rates</title>
      <link>http://tbenthompson.com/project/longmenshan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tbenthompson.com/project/longmenshan/</guid>
      <description>GRL article.
The Longmen Shan is the steepest topographic front at the India‐Asia collision zone and the site of the Mw 7.9 Wenchuan earthquake. To explain the interseismic GPS velocities across the greater Longmen Shan region, we developed a boundary element model including earthquake cycle effects, topography, the westward dipping Beichuan Fault and a ∼20 km deep, shallowly dipping, detachment, inferred from observed afterslip and from structural considerations. Prior analyses which had neglected the detachment and earthquake cycle effects found shortening rates near zero.</description>
    </item>
    
    <item>
      <title>Neotectonics of the Shargyn Basin, western Mongolia</title>
      <link>http://tbenthompson.com/project/shargyn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tbenthompson.com/project/shargyn/</guid>
      <description>My undergraduate thesis. Western Mongolia has experienced four of the largest strike-slip earthquakes in recorded history. The Gobi-Altai fault system is a 500km long left-lateral slip zone. The Altai fault system is a 1000km long right-lateral slip zone. Combined these fault systems accomodate 10-15% of the shortening in the Indo-Eurasian collision. At the intersection, complex kinematics have created a 150 x 100km basin, called the Shargyn Basin. I propose an explanation for the kinematics of the ongoing formation of the basin.</description>
    </item>
    
    <item>
      <title>Algorithms for Microscale Rock Deformation</title>
      <link>http://tbenthompson.com/project/microscale/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tbenthompson.com/project/microscale/</guid>
      <description>github
For an undergraduate research project, I worked with Alejandra to automate a procedure to quantify finite strain on a microscale. On a certain surface, a sample is etched (like a microprocessor) with spaced dots. Then, on a microscope photograph, the dot positions are recorded before and after deformation. However, tracking hundreds of thousands of these dots by hand is impossible. So, I worked on an algorithm to determine the deformation function between the initial and final images by tracking the dot positions.</description>
    </item>
    
    <item>
      <title>TherapyCharts</title>
      <link>http://tbenthompson.com/project/therapycharts/</link>
      <pubDate>Fri, 01 Jan 2010 00:00:00 -0500</pubDate>
      
      <guid>http://tbenthompson.com/project/therapycharts/</guid>
      <description>homepage
I worked for a while as the primary software developer for TherapyCharts, a web-based therapist records system. I developed a Python and PostgreSQL based backend and a ExtJS interface. I participated in two American Psychological Association conferences performing support and sales for TherapyCharts. TherapyCharts has now partnered with Wiley Publishing and is known as “Therascribe powered by TherapyCharts”.</description>
    </item>
    
    <item>
      <title>Machine Learning, Neural Networks, and Melanoma</title>
      <link>http://tbenthompson.com/project/neuralnets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tbenthompson.com/project/neuralnets/</guid>
      <description>In high school, I was very interested in machine learning algorithms and investigated neural networks, support vector machines and unsupervised learning. I replicated various algorithms and tested their properties at different points in parameter space on the MNIST dataset which contains 60,000 handwritten numbers. Later, I used an unsupervised learning technique (Autoencoders, Hinton et. al 2006) to improve the performance of a support vector machine model in detecting Melanoma (skin cancer).</description>
    </item>
    
    <item>
      <title>My Python testing set up</title>
      <link>http://tbenthompson.com/post/how_i_test/</link>
      <pubDate>Thu, 22 Feb 2018 00:00:00 -0500</pubDate>
      
      <guid>http://tbenthompson.com/post/how_i_test/</guid>
      <description>To follow up on the last post about testing for science and data analytics, I thought it&amp;rsquo;d be nice to talk about the specific tools I use for testing. I don&amp;rsquo;t claim this is the best way to do things, but it tends to work pretty well for small projects and teams.
py.test The py.test tool is handy for running a suite of tests in python. It&amp;rsquo;s a very general tool for running all the tests in a project.</description>
    </item>
    
    <item>
      <title>Automated testing for scientists and data analysts</title>
      <link>http://tbenthompson.com/post/automated_testing_for_science/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 -0500</pubDate>
      
      <guid>http://tbenthompson.com/post/automated_testing_for_science/</guid>
      <description>A lot of scientists and data analysts don&amp;rsquo;t use automatic test suites for verifying their code. And I think that&amp;rsquo;s because it&amp;rsquo;s really hard. Almost all the introductions to automated testing that I&amp;rsquo;ve seen come from a more typical software engineering perspective. They assume you already know exactly what the output of your code should be. And the trouble with science is that that&amp;rsquo;s rarely the case. I mean, if you knew the results ahead of time, you wouldn&amp;rsquo;t be doing science!</description>
    </item>
    
    <item>
      <title>Sneaky (transparent) huge pages</title>
      <link>http://tbenthompson.com/post/sneaky-transparent-huge-pages/</link>
      <pubDate>Wed, 17 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://tbenthompson.com/post/sneaky-transparent-huge-pages/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sparse n-body matrices</title>
      <link>http://tbenthompson.com/post/sparse_nbody/</link>
      <pubDate>Sat, 02 Jul 2016 00:00:00 -0400</pubDate>
      
      <guid>http://tbenthompson.com/post/sparse_nbody/</guid>
      <description>This is a sparsity plot of a matrix representing an approximate n-body interaction. The black dots are non-zeros in the matrix. Imagine 2000 stars, each exerting some gravitational pull on each of the other stars. This gravitational interaction could be represented by a dense matrix:
$$ A_{ij} = \frac{G m_i m_j}{|\mathbf{x}_i - \mathbf{x}_j|^2} $$
This works, but dense matrices can be slow when there are many stars. The cost of evaluating a matrix-vector product will scale like $O(n^2)$.</description>
    </item>
    
    <item>
      <title>&#34;Serializing&#34; a function in C&#43;&#43;</title>
      <link>http://tbenthompson.com/post/serialize_fnc_cpp/</link>
      <pubDate>Wed, 23 Dec 2015 00:00:00 -0500</pubDate>
      
      <guid>http://tbenthompson.com/post/serialize_fnc_cpp/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Setting up my website</title>
      <link>http://tbenthompson.com/post/setting_up_website/</link>
      <pubDate>Fri, 11 Dec 2015 00:00:00 -0500</pubDate>
      
      <guid>http://tbenthompson.com/post/setting_up_website/</guid>
      <description>I have a website now. Since technical stuff is fun, I thought I&amp;rsquo;d share the way I set it up.
The site is a set of statically served HTML pages. Hugo makes this really easy. Hugo is super fast and is written in Go. You can set up a few template pages and then write posts and pages in Markdown. Some layout is also done using Go templates. Running Hugo takes your templates and pages and concerts them into static HTML.</description>
    </item>
    
  </channel>
</rss>